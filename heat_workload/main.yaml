heat_template_version: 2013-05-23
description: Template to deploy a slice of instances with parameters.

parameters:
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: nova
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 1
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: 80245de9-cb3c-4f61-ac84-e0f800055cf5
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: m1.tiny
  num_of_slices:
    type: number
    label: Number of Slices
    description: Number of Slices to be deployed
    constraints:
      - range: {min: 1}
  scaling_size:
    type: number
    label: Scaling factor
    description: Maximum value of scaling factor
    default: 1
    constraints:
      - range: {min: 1}
  network:
    type: string
    label: Network ID or name
resources:
  group-disk:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: { get_param: num_of_slices }
      max_size: { get_param: scaling_size }
      min_size: 1
      resource:
        type: OS::Nova::Server::Disk
  group-cpu:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: { get_param: num_of_slices }
      max_size: { get_param: scaling_size }
      min_size: 1
      resource:
        type: OS::Nova::Server::Cpu
  group-ram:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: { get_param: num_of_slices }
      max_size: { get_param: scaling_size }
      min_size: 1
      resource:
        type: OS::Nova::Server::Ram
  group-slice:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: { get_param: num_of_slices }
      max_size: { get_param: scaling_size }
      min_size: 1
      resource:
        type: OS::Nova::Server::Slice
  scaleup_policy_disk:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: group-disk }
      cooldown: 60
      scaling_adjustment: 1
  scaleup_policy_slice:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: group-slice }
      cooldown: 60
      scaling_adjustment: 1
  scaleup_policy_cpu:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: group-cpu }
      cooldown: 60
      scaling_adjustment: 1
  scaleup_policy_ram:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: group-ram }
      cooldown: 60
      scaling_adjustment: 1
outputs:
  scale_up_url_disk:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scaleup_policy_disk, alarm_url]}
  scale_up_url_ram:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scaleup_policy_ram, alarm_url]}
  scale_up_url_cpu:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scaleup_policy_cpu, alarm_url]}
  scale_up_url_slice:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scaleup_policy_slice, alarm_url]}
