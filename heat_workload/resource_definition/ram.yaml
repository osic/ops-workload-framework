heat_template_version: 2014-10-16
description: RAM intensive resource.

parameters:
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: nova
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 1
    constraints:
      - range: { min: 1 }
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: 8405d07e-25c9-449d-a908-46bded58000b
  instance_type:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: m1.small
  network:
    type: string
    label: Network ID or name
    default: 5c4d3f44-e28d-46dc-b52a-53a5844ad804
resources:
  nova_server:
    type: OS::Nova::Server
    properties:
      name: ram-%index%
      availability_zone: { get_param: availability_zone }
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      networks: { get_param: network }
      user_data_format: RAW
      user_data: |
        #!/bin/sh -x
        echo "include <stdlib.h>
              int main() {
              int *p;
              while(1) {
                 int inc=1024*1024*sizeof(char);
                 p=(int*) calloc(1,inc);
                 if(!p) break;
              }
            }" > memtest.c
        gcc memtest.c
        ./a.out          
  cinder_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      availability_zone: { get_param: availability_zone }
  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume }
      instance_uuid: { get_resource: nova_server }
      mountpoint: /dev/vdc
